package com;

import rx.Observable;
import rx.Subscriber;

import java.util.ArrayList;

/**
 * Created by rois on 19/09/2017.
 */
public class SimpleSubscriber {

    public static void main(String[] args) throws InterruptedException {


        ArrayList<Long> arr = new ArrayList<Long>();
        for (int i = 0 ; i < 1000000 ; i++){
            arr.add(Long.valueOf(i));
        }

        Observable<Long> observable = Observable.from(arr);




        Subscriber<Long> subscriber = new Subscriber<Long>() {
            public void onCompleted() {
                System.out.println("completed");
            }

            public void onError(Throwable e) {
                System.out.println("error");
            }

            public void onNext(Long aLong) {
                /*try {
                    Thread.sleep(10);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                */
                long calc = aLong * aLong;
                if (calc < 0){
                    System.out.println("stam");
                }
                request(1);
                //System.out.println(aLong.toString());

            }


        };


        long start = System.currentTimeMillis();
        System.out.println(start);
        observable.subscribe(subscriber);
        System.out.println(System.currentTimeMillis() - start);




        Thread.sleep(100000);
    }
}
