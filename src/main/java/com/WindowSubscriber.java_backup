package com;

import rx.Observable;
import rx.Subscriber;
import rx.observables.MathObservable;

import java.util.ArrayList;

/**
 * Created by rois on 19/09/2017.
 */
public class WindowSubscriber {

    public static void main(String[] args) throws InterruptedException {


        ArrayList<Long> arr = new ArrayList<Long>();
        for (int i = 0 ; i < 100 ; i++){
            arr.add(Long.valueOf(i));
        }


        Observable<Long> observable = Observable.from(arr);
        Observable<Observable<Long>> window = observable.window(10);
        Observable<Long> flatedMap = window.flatMap(MathObservable::averageLong);
        Observable<String> mappedObservable = flatedMap.map(average -> "{'average': " + average + "}");


        Subscriber<String> subscriber = new Subscriber<String>() {
            public void onCompleted() {
                System.out.println("completed");
            }

            public void onError(Throwable e) {
                System.out.println("error");
            }

            public void onNext(String text) {
                request(10);
                System.out.println(text);


            }


        };


        long start = System.currentTimeMillis();
        System.out.println(start);
        mappedObservable.subscribe(subscriber);

        System.out.println("end " + (System.currentTimeMillis() - start));




        Thread.sleep(100000);
    }
}
